### Starting build.
# Target: sec1.ml.depends, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), extension:ml, file:sec1.ml, ocaml, ocamldep, quiet, strict-sequence, thread, traverse, use_str }
ocamlfind ocamldep -package graphics -package CS51Utils -modules sec1.ml > sec1.ml.depends
# Target: sec1.cmo, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, compile, extension:cmo, extension:ml, file:sec1.cmo, file:sec1.ml, implem, ocaml, quiet, strict-sequence, thread, traverse, use_str }
ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o sec1.cmo sec1.ml
+ ocamlfind ocamlc -c -thread -strict-sequence -package graphics -package CS51Utils -w A-4-33-40-41-42-43-34-44 -o sec1.cmo sec1.ml
File "sec1.ml", lines 316-320, characters 2-24:
316 | ..match lst with
317 |   | [elt] -> elt
318 |   | head :: tail ->
319 |       if head > (max_list tail) then head
320 |       else max_list tail...
Warning 8 [partial-match]: this pattern-matching is not exhaustive.
Here is an example of a case that is not matched:
[]
# Target: sec1.byte, tags: { package(CS51Utils), package(graphics), warn(A-4-33-40-41-42-43-34-44), byte, dont_link_with, extension:byte, file:sec1.byte, link, ocaml, program, quiet, strict-sequence, thread, traverse, use_str }
ocamlfind ocamlc -linkpkg str.cma -thread -package graphics -package CS51Utils sec1.cmo -o sec1.byte
# Compilation successful.
